
query getCardsForProject($id: ID!) {
	node(id: $id) {
		...ProjectFragment_Cards
	}
}

fragment ProjectFragment_Cards on ProjectV2 {
	items(first: 100) {
		nodes {
			id
			databaseId
			content {
				...DraftIssueFragment
				...IssueFragment
				...PullRequestFragment
			}
			fieldValueByName(name: "Status") {
				...SingleSelectValueFragment
			}
		}
	}
}

fragment SingleSelectValueFragment on ProjectV2ItemFieldSingleSelectValue {
	optionId
}

fragment DraftIssueFragment on DraftIssue {
	id
	title
	body
}

fragment IssueFragment on Issue {
	databaseId
	id
	title
	body
	closed
	number
	repository {
		name
	}
	author {
		login
	}
	labels(first: 5) {
		nodes {
			color
			name
			id
			description
		}
	}
}

fragment PullRequestFragment on PullRequest {
	databaseId
	id
	closed
	body
}

mutation updateItemPosition($projectId: ID!, $itemId: ID!, $afterItemId: ID) {
	updateProjectV2ItemPosition(input: {
		projectId: $projectId
		itemId: $itemId
		afterId: $afterItemId
	}) {
		clientMutationId
	}
}

mutation updateItemStatus($projectId: ID!, $itemId: ID!, $statusFieldId: ID!, $optionId: String!) {
	updateProjectV2ItemFieldValue(input: {
		projectId: $projectId
		itemId: $itemId
		fieldId: $statusFieldId
		value: {
			singleSelectOptionId: $optionId
		}
	}) {
		clientMutationId
	}
}

mutation archiveItem($projectId: ID!, $itemId: ID!) {
	archiveProjectV2Item(input: {
		projectId: $projectId
		itemId: $itemId
	}) {
		clientMutationId
	}
}

mutation addDraftIssue($projectId: ID!, $title: String!, $body: String) {
	addProjectV2DraftIssue(input: {
		projectId: $projectId
		title: $title
		body: $body
	}) {
		clientMutationId
		projectItem {
			id
		}
	}
}

mutation updateDraftIssue($id: ID!, $title: String!, $body: String) {
	updateProjectV2DraftIssue(input: {
		draftIssueId: $id
		title: $title
		body: $body
	}) {
		clientMutationId
	}
}

mutation deleteItem($projectId: ID!, $itemId: ID!) {
	deleteProjectV2Item(input: {
		projectId: $projectId
		itemId: $itemId
	}) {
		clientMutationId
	}
}

mutation updateIssue($id: ID!, $title: String!, $body: String, $labelIds: [ID!]) {
	updateIssue(input: {
		id: $id
		title: $title
		body: $body
		labelIds: $labelIds
	}) {
		clientMutationId
	}
}

mutation updateIssueState($id: ID!, $state: IssueState!) {
	updateIssue(input: {
		id: $id
		state: $state
	}) {
		clientMutationId
	}
}